초기 설정
	git config --global user.name "sky82e"
	git config --global user.email "sky82e@naver.com"


	// c:\workspace\git_test 폴더 생성
	PS C:\> New-Item -Path .\workspace\git_test -ItemType directory
	PS C:\workspace\git_test> git init
					Initialized empty Git repository in C:/workspace/git_test/.git/

	임의 파일 생성 후( learning.txt)

	PS C:\workspace\git_test> git status
		On branch master

		No commits yet

		Untracked files:
		  (use "git add <file>..." to include in what will be committed)

	        learning.txt

	// 최초
	PS C:\workspace\git_test> git add .\learning.txt					|	Tracked File

	// git Add 했을 경우
	PS C:\workspace\git_test> git status
					On branch master					|
												|			
					No commits yet						|
												|
					Changes to be committed:				|		
					  (use "git rm --cached <file>..." to unstage)		|
												|	Staging Area (Staged Filed)
				        new file:   learning.txt				|

	// Commit	
	PS C:\workspace\git_test> git commit .\learning.txt -m "First Commit File"		|
					[master (root-commit) 4fa4892] First Commit File	|
					 1 file changed, 32 insertions(+)			|	(Committed File)	
					 create mode 100644 learning.txt			|


	// 수정했을 경우
	PS C:\workspace\git_test> git status
					On branch master
					Changes not staged for commit:
					  (use "git add <file>..." to update what will be committed)
					  (use "git checkout -- <file>..." to discard changes in working directory)

				        modified:   learning.txt

					no changes added to commit (use "git add" and/or "git commit -a")

	// 2번째 커밋
	PS C:\workspace\git_test> git commit .\learning.txt -m "Modifed Commit File"
					[master 067a808] Modifed Commit File
					 1 file changed, 24 insertions(+), 3 deletions(-)
			
	// .gitignore (Tracking 하지 않을 파일)		
	PS C:\workspace\git_test> New-Item -Path .\.gitignore -ItemType file -Value "test.txt"


				    디렉터리: C:\workspace\git_test
	
						Mode                LastWriteTime         Length Name
						----                -------------         ------ ----
						-a----     2017-12-20  오후 10:35              8 .gitignore

	// Tracking 제외 파일
	PS C:\workspace\git_test> New-Item -Path .\test.txt -ItemType file


				    디렉터리: C:\workspace\git_test


	PS C:\workspace\git_test> git commit -a -m "git Ignore File Test"
					[master 7236f33] git Ignore File Test
					 1 file changed, 42 insertions(+)






						Mode                LastWriteTime         Length Name
						----                -------------         ------ ----
						-a----     2017-12-20  오후 10:36              0 test.txt

	// 결과
	PS C:\workspace\git_test> git status
					On branch master
					Changes not staged for commit:
					  (use "git add <file>..." to update what will be committed)
					  (use "git checkout -- <file>..." to discard changes in working directory)

				        modified:   learning.txt

					Untracked files:
					  (use "git add <file>..." to include in what will be committed)

				        .gitignore

					no changes added to commit (use "git add" and/or "git commit -a")

	// commit
	PS C:\workspace\git_test> git add .\test1.txt
	PS C:\workspace\git_test> git commit .\test1.txt
	PS C:\workspace\git_test> git rm .\test1.txt
					rm 'test1.txt'

	PS C:\workspace\git_test> ls


				    디렉터리: C:\workspace\git_test


					Mode                LastWriteTime         Length Name
					----                -------------         ------ ----
					-a----     2017-12-20  오후 10:35              8 .gitignore
					-a----     2017-12-20  오후 10:51           3282 learning.txt
					-a----     2017-12-20  오후 10:36              0 test.txt



	PS C:\workspace\git_test> git status
					On branch master
					Changes to be committed:
					  (use "git reset HEAD <file>..." to unstage)

				        deleted:    test1.txt

					Changes not staged for commit:
					  (use "git add <file>..." to update what will be committed)
					  (use "git checkout -- <file>..." to discard changes in working directory)

				        modified:   learning.txt

	// log
	PS C:\workspace\git_test> git log
					commit deaa6435a445c304e14f4d1b2e278c35c06777cd (HEAD -> master)
					Author: sky82e <sky82e@naver.com>
					Date:   Wed Dec 20 22:50:30 2017 +0900

					    <EC><82><AD><EC><A0><9C> <ED><85><8C><EC><8A><A4><ED><8A><B8> <ED><8C><8C><EC><9D><BC>

					commit eb2f4aebe10ca09e3929c99f6ac9b341202c3837
					Author: sky82e <sky82e@naver.com>
					Date:   Wed Dec 20 22:49:37 2017 +0900

					    delete file

						commit 67738936df95c2f37f8b0519336ca1a0b43a895d
					
					Author: sky82e <sky82e@naver.com>
					Date:   Wed Dec 20 22:48:41 2017 +0900

					    Second Commit File

						commit 7236f337d22d0236446070457fd97353475a604d

					Author: sky82e <sky82e@naver.com>	
					Date:   Wed Dec 20 22:39:34 2017 +0900

					    git Ignore File Test

						commit 067a80852c976c87609a721911de65e93376e15f
					
					Author: sky82e <sky82e@naver.com>
					Date:   Wed Dec 20 22:26:17 2017 +0900

					    Modifed Commit File

						commit 4fa48926a617e42ae3d07738980cbcf5ffe2ca32
					Author: sky82e <sky82e@naver.com>
					Date:   Wed Dec 20 22:21:26 2017 +0900

					    First Commit File
		// git log --stat 		#통계정보를 조회
		// git log --pretty=oneline	#한줄 정리
		// git log --pretty=format:"%h - %an, %ar :%s"	--graph



		PS C:\workspace\git_test> git log --pretty=oneline
			deaa6435a445c304e14f4d1b2e278c35c06777cd (HEAD -> master) <EC><82><AD><EC><A0><9C> <ED><85><8C><EC><8A><A4><ED><8A><B8>
			<ED><8C><8C><EC><9D><BC>
			eb2f4aebe10ca09e3929c99f6ac9b341202c3837 delete file
			67738936df95c2f37f8b0519336ca1a0b43a895d Second Commit File
			7236f337d22d0236446070457fd97353475a604d git Ignore File Test
			067a80852c976c87609a721911de65e93376e15f Modifed Commit File
			4fa48926a617e42ae3d07738980cbcf5ffe2ca32 First Commit File


		// 해당버젼으로 이동 checkOut
		PS C:\workspace\git_test> git checkout 677389
			Note: checking out '677389'.

			You are in 'detached HEAD' state. You can look around, make experimental
			changes and commit them, and you can discard any commits you make in this
			state without impacting any branches by performing another checkout.

			If you want to create a new branch to retain commits you create, you may
			do so (now or later) by using -b with the checkout command again. Example:

			  git checkout -b <new-branch-name>

			HEAD is now at 6773893... Second Commit File
			M       learning.txt


		PS C:\workspace\git_test> git branch
			* (HEAD detached at 6773893)
			  master

		PS C:\workspace\git_test> git checkout master
			Previous HEAD position was 6773893... Second Commit File
			Switched to branch 'master'
			M       learning.txt
		PS C:\workspace\git_test> git branch
			* master


		PS C:\workspace\git_test> git branch test123
		PS C:\workspace\git_test> git branch
						* master
					  	test123


		// 브랜치 이동
		PS C:\workspace\git_test> git checkout test123
						Switched to branch 'test123'
						M       learning.txt
		
		PS C:\workspace\git_test> git branch
						  master
						* test123
	
		// 파일 생성
		PS C:\workspace\git_test> New-Item -Path .\branch.txt -ItemType file


					    디렉터리: C:\workspace\git_test


						Mode                LastWriteTime         Length Name
						----                -------------         ------ ----
						-a----     2017-12-20  오후 11:22              0 branch.txt

		// git add, commit 후

		// Merge
		PS C:\workspace\git_test> git merge test123
						Updating deaa643..4c14854
						Fast-forward
						 branch.txt   |  0
						 learning.txt | 85 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++---
						 2 files changed, 82 insertions(+), 3 deletions(-)

		PS C:\workspace\git_test> git log --pretty=oneline
						4c14854da022c1bcf116d368289d54d01098406b (HEAD -> master, test123) modi
						7163d6d9dae270f887061db04fa1c06acb72f101 branch <EC><B6><94><EA><B0><80>
						deaa6435a445c304e14f4d1b2e278c35c06777cd <EC><82><AD><EC><A0><9C> <ED><85><8C><EC><8A><A4><ED><8A><B8> <ED><8C><8C><EC>
						<9D><BC>
						eb2f4aebe10ca09e3929c99f6ac9b341202c3837 delete file
						67738936df95c2f37f8b0519336ca1a0b43a895d Second Commit File
						7236f337d22d0236446070457fd97353475a604d git Ignore File Test
						067a80852c976c87609a721911de65e93376e15f Modifed Commit File
						4fa48926a617e42ae3d07738980cbcf5ffe2ca32 First Commit File
